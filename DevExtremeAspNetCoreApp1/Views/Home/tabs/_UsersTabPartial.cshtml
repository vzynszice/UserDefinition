@using DevExtreme.AspNet.Mvc
@using DAL.Models

<script src="~/js/grids/grid-utils.js"></script>
<script src="~/js/grids/users-grid-safe.js"></script>


<!-- DevExtreme DataGrid -->
@(Html.DevExtreme().DataGrid<DAL.Models.UserModel>()
			.ID("gridContainer")
			.ShowBorders(true)
			.Width("100%")
			.ColumnAutoWidth(false)
			.Scrolling(s => s
			.Mode(GridScrollingMode.Standard)
			.ShowScrollbar(ShowScrollbarMode.Always)
			)
			.Paging(p => p.Enabled(true).PageSize(20))
			.OnInitialized("onGridInitialized")
			.OnContentReady("onGridContentReady")
			.Editing(e => e

				.Mode(GridEditMode.Popup)
				.AllowUpdating(true)
				.AllowAdding(true)
				.AllowDeleting(true)
				.Popup(p => p
					.ShowTitle(true)
					.Width(700)
					.Height(525)
			)
			.Form(f => f.Items(items =>
			{
				items.AddGroup()
					.ColCount(2)
					.ColSpan(2)
					.Items(groupItems =>
			{
				groupItems.AddSimpleFor(m => m.Name).DataField("name").IsRequired(true);
				groupItems.AddSimpleFor(m => m.Surname).DataField("surname").IsRequired(true);
				groupItems.AddSimpleFor(m => m.Email).DataField("email").Visible(false);
				groupItems.AddSimpleFor(m => m.Username).DataField("username").IsRequired(true);
				groupItems.AddSimpleFor(m => m.Password).DataField("password").Editor(e => e.TextBox().Mode(TextBoxMode.Password));
				groupItems.AddSimpleFor(m => m.DealerID).DataField("dealerID").Editor(e => e.SelectBox().DataSource(d => d.Mvc().Controller("Home").
					LoadAction("GetDealersForUsersAndServices").Key("id")).DisplayExpr("name").ValueExpr("id"));
				groupItems.AddSimpleFor(m => m.ServiceID).DataField("serviceID").Editor(e => e.SelectBox().DataSource(d => d.Mvc().Controller("Home")
					.LoadAction("GetServicesByID").Key("id")).DisplayExpr("name").ValueExpr("id"));
			});
			}))
			)
			.Columns(columns =>
			{
				columns.Add().Type(GridCommandColumnType.Buttons).Width(110).Buttons(buttons =>
			{
				buttons.Add().Name(GridColumnButtonName.Edit);
				buttons.Add().Name(GridColumnButtonName.Delete);
			});
				columns.AddFor(m => m.ID).DataField("id").Width(100).Caption("ID");
				columns.AddFor(m => m.Username).DataField("username").Width(180).Caption("Username");
				columns.AddFor(m => m.Email).DataField("email").Width(220).Caption("E-mail");
				columns.AddFor(m => m.Password).DataField("password").Visible(false);
				columns.AddFor(m => m.Name).DataField("name").Width(180).Caption("Name");
				columns.AddFor(m => m.Surname).DataField("surname").Width(180).Caption("Surname");
				columns.AddFor(m => m.DealerID).DataField("dealerID").Width(180).Caption("Dealer")
					.Lookup(lookup => lookup
						.DataSource(d => d.Mvc().Controller("Home").LoadAction("GetDealersForUsersAndServices").Key("id")).DisplayExpr("name").ValueExpr("id"));
				columns.AddFor(m => m.ServiceID).DataField("serviceID").Width(180).Caption("Service")
					.Lookup(lookup => lookup
						.DataSource(d => d.Mvc().Controller("Home").LoadAction("GetServicesByID").Key("id")).DisplayExpr("name").ValueExpr("id"));
			})
		.DataSource(d => d.Mvc()
		.Controller("Home")
		.LoadAction("GetUsers")
		.InsertAction("AddUser")
		.UpdateAction("UpdateUser")
		.DeleteAction("DeleteUser")
		.Key("id")
		)
		)